// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using finance.Models;

#nullable disable

namespace finance.Migrations
{
    [DbContext(typeof(FinanceContext))]
    [Migration("20240329183606_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Classes.Benutzer", b =>
                {
                    b.Property<Guid>("BenutzerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Bargeld")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswortHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BenutzerId");

                    b.ToTable("Benutzer");
                });

            modelBuilder.Entity("Classes.Transaktion", b =>
                {
                    b.Property<Guid>("TransaktionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Anzahl")
                        .HasColumnType("integer");

                    b.Property<Guid>("BenutzerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DatumZeit")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Preis")
                        .HasColumnType("numeric");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TransaktionId");

                    b.HasIndex("BenutzerId");

                    b.ToTable("Transaktionen");
                });

            modelBuilder.Entity("Classes.Transaktion", b =>
                {
                    b.HasOne("Classes.Benutzer", "Benutzer")
                        .WithMany()
                        .HasForeignKey("BenutzerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benutzer");
                });
#pragma warning restore 612, 618
        }
    }
}
